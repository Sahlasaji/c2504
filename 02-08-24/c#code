Q1
class Q01
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        for (int I = 1; I <= numOfTerms ; I++)
        {
            Console.Write($"{term} ");
            term = term + 2;
        }
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
2.class Q02
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        while ( I <= numOfTerms  )
        {
            Console.Write($"{term} ");
            term = term + 2;
            I++;
        }
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
class Q03
{
    static void PrintSeries10_12_14(int numOfTerms)
    {
        int term = 10;
        int I = 1;
        do 
        {
            if (0 == numOfTerms)
            {
                break;
            }
            Console.Write($"{term} ");
            term = term + 2;

            I++;
        } while (I <= numOfTerms) ;
    }
    // input=5, output=10 12 14 16 18
    // input=8, output=10 12 14 16 18 20 22 24
    // input=3, output=10 12 14
    // input=0, ouput=
    static void TestPrintSeries10_12_14()
    {
        Console.Write("Enter number of terms:");
        int numOfTerms = int.Parse(Console.ReadLine());
        Console.Write("Series: ");
        PrintSeries10_12_14(numOfTerms);
        Console.WriteLine();
    }

    static void Main(string[] args) //user: p
    {
        Console.WriteLine("--------------TestPrintSeries10_12_14...--------------");
        TestPrintSeries10_12_14();
        Console.WriteLine("--------------End TestPrintSeries10_12_14...--------------");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
4.class Q04
{
    //21_22_24_27_31_36_42_49
    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        for (int I = 1; I <= N; I++) 
        {
            if( I == N )
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;
        }
        return term;
    }
   
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
5.class Q05
{

    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        while ( I <= N ) 
        {
            if( I == N )
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        }
        return term;
    }
    
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
6.class Program
{

    static int GetNthTerm_21_22_24_27(int N) 
    {
        int term = 21;  
        int difference = 1;
        int I = 1;
        do
        {
            if (I == N)
            {
                break;
            }
            //
            term = term + difference;
            difference = difference + 1;

            I++;
        } while (I <= N);
        return term;
    }
    
    //input=5,output=31
    //input=3,output=24
    //input=7,output=42
    static void TestGetNthTerm_21_22_24_27()
    {
        Console.Write("Enter number of terms:");
        int N = int.Parse(Console.ReadLine());
        int nthTerm = GetNthTerm_21_22_24_27(N);
        Console.WriteLine($"Nth term is {nthTerm}"); 
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestGetNthTerm_21_22_24_27-----");
        TestGetNthTerm_21_22_24_27();
        Console.WriteLine("-----End TestGetNthTerm_21_22_24_27-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
7.class Q07
{
   
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        for(int I = 1; I <= N; I++ )
        { 
            for(int J = 1; J <= N-I; J++)
            {
                Console.Write("  "); //2 spaces
            }
            for(int J = 1; J <= I; J++)
            {
                Console.Write($"{J} ");//num and space
            }
            Console.WriteLine();//new line 
        }
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
8.using System;

class Program
{
    static void PrintNumTriangleMirroredRightAngle(int N)
    {
        int I = 1;
        while (I <= N)  // N times = Number of Lines
        {
            int J = 1;
            // Number of Spaces before Number print
            while (J <= N - I)
            {
                Console.Write("  ");  // Two Spaces, No Newline Printing
                J++;
            }
            
            J = 1;
            // Number of Numbers is I times
            while (J <= I)
            {
                Console.Write(J + " ");  // Print number and space, no new line
                J++;
            }
            
            Console.WriteLine();  // Move to the next line
            I++;
        }
    }

    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.WriteLine("Enter the number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }

    static void Main(string[] args)
    {
        TestPrintNumTriangleMirroredRightAngle();
    }
}
9.using System;

class Program
{
    static void PrintNumTriangleMirroredRightAngle(int N)
    {
        int I = 1;
        do
        {
            int J = 1;
            // Number of Spaces before Number print
            do
            {
                Console.Write("  ");  // Two Spaces, No Newline Printing
                J++;
            } while (J <= N - I);
            
            J = 1;
            // Number of Numbers is I times
            do
            {
                Console.Write(J + " ");  // Print number and space, no new line
                J++;
            } while (J <= I);
            
            Console.WriteLine();  // Move to the next line
            I++;
        } while (I <= N);
    }

    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.WriteLine("Enter the number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }

    static void Main(string[] args)
    {
        TestPrintNumTriangleMirroredRightAngle();
    }
}
10.using System;

class Program
{
    static void PrintFibonacciForLoop(int N)
    {
        // Initialize the first two terms
        int term1 = 0;
        int term2 = 1;

        // Print the first two terms
        Console.Write(term1 + " " + term2 + " ");

        // Loop to calculate and print the next terms
        for (int I = 3; I <= N; I++)
        {
            int nextTerm = term1 + term2;
            Console.Write(nextTerm + " ");
            term1 = term2;
            term2 = nextTerm;
        }
        Console.WriteLine();
    }

    static void TestPrintFibonacciForLoop()
    {
        Console.WriteLine("Enter the number of terms:");
        int N = int.Parse(Console.ReadLine());
        PrintFibonacciForLoop(N);
    }

    static void Main(string[] args)
    {
        TestPrintFibonacciForLoop();
    }
}
11.using System;

class Program
{
    static void PrintFibonacciWhileLoop(int N)
    {
        // Initialize the first two terms
        int term1 = 0;
        int term2 = 1;
        int count = 2;

        // Print the first two terms
        Console.Write(term1 + " " + term2 + " ");

        // Loop to calculate and print the next terms
        while (count < N)
        {
            int nextTerm = term1 + term2;
            Console.Write(nextTerm + " ");
            term1 = term2;
            term2 = nextTerm;
            count++;
        }
        Console.WriteLine();
    }

    static void TestPrintFibonacciWhileLoop()
    {
        Console.WriteLine("Enter the number of terms:");
        int N = int.Parse(Console.ReadLine());
        PrintFibonacciWhileLoop(N);
    }

    static void Main(string[] args)
    {
        TestPrintFibonacciWhileLoop();
    }
}
12. using System;

class Program
{
    static void PrintFibonacciDoWhileLoop(int N)
    {
        // Initialize the first two terms
        int term1 = 0;
        int term2 = 1;
        int count = 2;

        // Print the first two terms
        Console.Write(term1 + " " + term2 + " ");

        // Loop to calculate and print the next terms
        do
        {
            int nextTerm = term1 + term2;
            Console.Write(nextTerm + " ");
            term1 = term2;
            term2 = nextTerm;
            count++;
        } while (count < N);
        Console.WriteLine();
    }

    static void TestPrintFibonacciDoWhileLoop()
    {
        Console.WriteLine("Enter the number of terms:");
        int N = int.Parse(Console.ReadLine());
        PrintFibonacciDoWhileLoop(N);
    }

    static void Main(string[] args)
    {
        TestPrintFibonacciDoWhileLoop();
    }
}
13.using System;

class Program
{
    static void PrintNthFibonacciForLoop(int N)
    {
        // Initialize the first two terms
        int term1 = 0;
        int term2 = 1;
        int nthTerm = 0;

        // Handle edge cases for N = 1 and N = 2
        if (N == 1)
        {
            Console.WriteLine(term1);
            return;
        }
        else if (N == 2)
        {
            Console.WriteLine(term2);
            return;
        }

        // Loop to calculate the nth term
        for (int I = 3; I <= N; I++)
        {
            nthTerm = term1 + term2;
            term1 = term2;
            term2 = nthTerm;
        }

        // Print the nth term
        Console.WriteLine(nthTerm);
    }

    static void TestPrintNthFibonacciForLoop()
    {
        Console.WriteLine("Enter the term number:");
        int N = int.Parse(Console.ReadLine());
        PrintNthFibonacciForLoop(N);
    }

    static void Main(string[] args)
    {
        TestPrintNthFibonacciForLoop();
    }
}
